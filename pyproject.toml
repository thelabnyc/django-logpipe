[build-system]
requires = [ "poetry-core>=2.0.1",]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "django-logpipe"
version = "1.4.9"
description = "Move data around between Python services using Kafka and/or AWS Kinesis and Django Rest Framework serializers."
authors = ["thelab <thelabdev@thelab.co>"]
readme = "README.md"
homepage = "https://gitlab.com/thelabnyc/django-logpipe"
repository = "https://gitlab.com/thelabnyc/django-logpipe"
license = "ISC"

[[tool.poetry.packages]]
include = "logpipe"
from = "src"

[tool.poetry.dependencies]
python = "^3.11"
Django = ">=4.2"
djangorestframework = ">=3.15.2"
lru-dict = ">=1.3.0"
pydantic = "^2.10.5"
kafka-python = {version = "*", optional = true}
boto3 = {version = "^1.36.1", optional = true}
msgpack = {version = "^1.1.0", optional = true}

[tool.poetry.extras]
kafka = ["kafka-python"]
kinesis = ["boto3", "boto3-stubs", "botocore-stubs"]
msgpack = ["msgpack"]

[tool.poetry.group.dev.dependencies]
coverage = "^7.6.10"
flake8 = "^7.1.1"
moto = "^4.2.14"
boto3 = "^1.36.4"
boto3-stubs = {version = "^1.36.1", extras = ["kinesis"]}
botocore-stubs = {version = "^1.36.1"}
psycopg2-binary = "^2.9.10"
tox = "^4.24.1"
pytz = ">=2024.2"
kafka-python = {git = "https://github.com/dpkp/kafka-python.git", rev = "master", optional = true}
mypy = "^1.14.1"
django-stubs = {version = "^5.1.2"}
djangorestframework-stubs = "^3.15.2"
msgpack-types = "^0.5.0"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.6.1"
pymdown-extensions = "^10.11.2"
mkdocs-material = "^9.5.50"
mkautodoc = "^0.2.0"

[tool.mypy]
python_version = "3.11"
plugins = ["mypy_django_plugin.main", "mypy_drf_plugin.main"]

# Strict mode, see mypy --help
warn_unused_configs = true
disallow_subclassing_any = true
disallow_any_generics = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
# warn_return_any = true
no_implicit_reexport = true
show_error_codes = true
# Not turned on by strict
strict_equality = true

[[tool.mypy.overrides]]
module = "kafka.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "logpipe.tests.*"
ignore_errors = true

[tool.django-stubs]
django_settings_module = "sandbox.settings"

[tool.isort]
profile = "black"
from_first = true

[tool.coverage.run]
branch = true
source_pkgs = ["logpipe"]
omit = [
    "*/migrations/*",
    "*/snapshots/*",
    "*/tests/*",
]

[tool.coverage.report]
show_missing = true
ignore_errors = true

[tool.commitizen]
name = "cz_conventional_commits"
annotated_tag = true
gpg_sign = true
tag_format = "v$version"
update_changelog_on_bump = true
changelog_merge_prerelease = true
version_provider = "poetry"
version_scheme = "pep440"
version_files = [
    "pyproject.toml:version",
]
pre_bump_hooks = [
    "pre-commit run --all-files || true",
]
post_bump_hooks = [
    "git push origin master $CZ_POST_CURRENT_TAG_VERSION"
]
