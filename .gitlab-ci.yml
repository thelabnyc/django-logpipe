variables:
  ADVERTISED_HOST: 'spotify__kafka'
  ADVERTISED_PORT: '9092'
  AUTO_CREATE_TOPICS: 'true'
  POSTGRES_HOST_AUTH_METHOD: 'trust'

stages:
  - test
  - release

services:
  - spotify/kafka
  - postgres:latest

cache:
  key: "$CI_PROJECT_NAME"
  paths:
    - $HOME/.cache/pip

.rules_mrs_and_protected:
  - if: $CI_PIPELINE_SOURCE == "schedule"
    when: never
  - if: $CI_COMMIT_BRANCH && $CI_COMMIT_REF_PROTECTED == "true"
  - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED == "true"
  - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

precommit:
  stage: test
  image: python:3
  rules:
    - !reference [.rules_mrs_and_protected]
  variables:
    PRE_COMMIT_HOME: ${CI_PROJECT_DIR}/.cache/pre-commit
  script:
    - pip3 install pre-commit
    - pre-commit run --all-files
  cache:
    paths:
      - ${PRE_COMMIT_HOME}

test:lib:
  stage: test
  image: "registry.gitlab.com/thelabnyc/python:${IMAGE}"
  rules:
    - !reference [.rules_mrs_and_protected]
  script:
    - pip install tox
    - tox
  coverage: '/^TOTAL.+?(\d+\%)$/'
  parallel:
    matrix:
      - IMAGE: py311
        TOX_SKIP_ENV: "^(?!py311-)"
      - IMAGE: py312
        TOX_SKIP_ENV: "^(?!py312-)"

test:docs:
  stage: test
  image: "registry.gitlab.com/thelabnyc/python:py311"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  stage: test
  script:
    - poetry install
    - make docs

pages:
  stage: release
  image: "registry.gitlab.com/thelabnyc/python:py311"
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_REF_PROTECTED == "true"
  needs:
    - precommit
    - test:lib
  script:
    - poetry install
    - make docs
  artifacts:
    paths:
      - public

publish_pkg:
  image: registry.gitlab.com/thelabnyc/python:py311
  stage: release
  needs:
    - precommit
    - test:lib
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED
  script:
    - pip install twine
    - poetry build
    # Publish to PyPI
    - export TWINE_USERNAME=__token__
    - export TWINE_PASSWORD=${PYPI_TOKEN}
    - python -m twine upload
        --repository-url https://upload.pypi.org/legacy/
        dist/*
    # Publish to Gitlab
    - export TWINE_USERNAME=gitlab-ci-token
    - export TWINE_PASSWORD=${CI_JOB_TOKEN}
    - python -m twine upload
        --repository-url https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/packages/pypi
        dist/*

publish_gitlab_release:
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  stage: release
  needs:
    - precommit
    - test:lib
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED
  script:
    - echo 'release job'
  release:
    name: 'Release $CI_COMMIT_TAG'
    description: 'Release $CI_COMMIT_TAG. Tagged by $GITLAB_USER_LOGIN'
    tag_name: '$CI_COMMIT_TAG'
    ref: '$CI_COMMIT_TAG'
